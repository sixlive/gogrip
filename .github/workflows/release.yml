on:
  push:
    tags:
      - "*"

name: Release

jobs:
  build:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            arch: amd64
          - os: ubuntu-latest
            goos: linux
            arch: arm64
          - os: ubuntu-latest
            goos: linux
            arch: arm
            arm: 7
          - os: macos-latest
            goos: darwin
            arch: amd64
          - os: macos-latest
            goos: darwin
            arch: arm64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go 1.20
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: false

      - name: Restore Go modules cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: go-${{ matrix.goos }}-${{ matrix.arch }}-${{ hashFiles('go.mod') }}
          restore-keys: |
            go-${{ matrix.goos }}-${{ matrix.arch }}-

      - name: Download dependencies
        run: go mod download

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.arch }}
          GOARM: ${{ matrix.arm }}
        run: go build -v

      - name: Set version
        id: version
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Package release
        run: tar -zcvf gogrip-${{ matrix.goos }}-${{ matrix.arch }}.tar.gz gogrip

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: gogrip-${{ matrix.goos }}-${{ matrix.arch }}.tar.gz
          asset_name: gogrip-${{ steps.version.outputs.tag }}-${{ matrix.goos }}-${{ matrix.arch }}.tar.gz
          tag: ${{ steps.version.outputs.tag }}
          overwrite: true
